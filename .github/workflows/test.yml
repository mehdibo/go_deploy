name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:

  staticcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: dominikh/staticcheck-action@v1.2.0

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: golangci/golangci-lint-action@v3

  gosec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: securego/gosec@master
        env:
          GOROOT: ''
        with:
          args: ./...

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - id: go-cache-paths
        run: |
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Setup PostgreSQL
        uses: Harmon758/postgresql-action@v1.0.0
        with:
          "postgresql db": "test_db"
          "postgresql user": "test_user"
          "postgresql password": "test_pass"

      - uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq user: 'guest'
          rabbitmq password: 'guest'

      - name: Install packages
        run: make vendor

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_USER: test_user
          DB_PASS: test_pass
          DB_NAME: test_db
          AMQP_HOST: localhost
          AMQP_USER: guest
          AMQP_PASS: guest
        run: make test
